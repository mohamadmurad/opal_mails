<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;

class receipts extends Model
{
    use HasFactory;
    protected $fillable  = [
        'recipient_name',
        'amount',
        'reason',
        'status',
        'employee_id',
        'company_id',
        'manager_id',
        'notes',
    ];


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::deleting(function ($receipt){
            //    dd($receipt->files);
            foreach ($receipt->files as $fileX){

                if (Storage::disk('files')->exists($fileX->name)){
                    Storage::disk('files')->delete($fileX->name);
                }

            }



        });


    }


    public function employee(){

        return $this->belongsTo(User::class,'employee_id','id');

    }

    public function manager(){

        return $this->belongsTo(User::class,'manager_id','id');

    }


    public function company(){

        return $this->belongsTo(Company::class,'company_id','id');

    }


//    public function manager(){
//        return $this->belongsToMany(User::class,'receipts_status')
//            ->withPivot('status','notes')
//            ->as('status')
//            ->withTimestamps();
//    }


    public function files(){

        return $this->hasMany(files::class,'receipts_id','id');

    }





}
