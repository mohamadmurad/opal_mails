<?php

namespace App\Models;

use App\Http\Controllers\FcmController;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Storage;

class receipts extends Model
{
    use HasFactory;
    protected $fillable  = [
        'recipient_name',
        'amount',
        'reason',
        'status',
        'employee_id',
        'company_id',
        'manager_id',
        'notes',
    ];


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::deleting(function ($receipt){
            //    dd($receipt->files);
            foreach ($receipt->files as $fileX){

                if (Storage::disk('files')->exists($fileX->name)){
                    Storage::disk('files')->delete($fileX->name);
                }

            }



        });

        static::created(function ($receipts ){
            $title ="هناك امر دفع جديد لـ :" .  $receipts->recipient_name;
            $body = "المبلغ  : " .  $receipts->amount . "\n من قبل الموظف : " .$receipts->employee->name
            . "\n وذلك لقاء : " ;
            $icon =null;
            $data = $receipts;
            $auth_id = 1;
            $device_token = DB::table('users')->where('isManager','=',1)->where('fcm_token','!=','')->pluck('fcm_token')->toArray();
            if (count($device_token)>0){
                $ob = new FcmController();
                $result = $ob->sendTo($data,$device_token,$title,$body,$icon);
            }


        });


    }


    public function employee(){

        return $this->belongsTo(User::class,'employee_id','id');

    }

    public function manager(){

        return $this->belongsTo(User::class,'manager_id','id');

    }


    public function company(){

        return $this->belongsTo(Company::class,'company_id','id');

    }


//    public function manager(){
//        return $this->belongsToMany(User::class,'receipts_status')
//            ->withPivot('status','notes')
//            ->as('status')
//            ->withTimestamps();
//    }


    public function files(){

        return $this->hasMany(files::class,'receipts_id','id');

    }





}
